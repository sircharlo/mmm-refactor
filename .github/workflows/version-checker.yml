name: Version Checker

on:
  workflow_dispatch:

jobs:
  version_checker:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read package version
        uses: ZvonimirSun/read-package-version-actions@v2
        id: package-version

      - name: Get Latest Release Version
        id: get-latest-release
        uses: pozetroninc/github-action-get-latest-release@v0.8.0
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Compare versions and increment if needed
        id: compare-versions
        run: |
          PACKAGE_VERSION="${{ steps.package-version.outputs.version }}"
          GITHUB_RELEASE_VERSION="${{ steps.get-latest-release.outputs.release }}"

          # Strip leading 'v' if present
          GITHUB_RELEASE_VERSION="${GITHUB_RELEASE_VERSION#v}"

          echo "Package version: $PACKAGE_VERSION"
          echo "GitHub release version: $GITHUB_RELEASE_VERSION"

          if [ "$PACKAGE_VERSION" = "$GITHUB_RELEASE_VERSION" ]; then
            NEW_VERSION=true
          else
            NEW_VERSION=false
          fi
          echo "New version: $NEW_VERSION"
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          exit 0

      - name: Stop if the version in package.json is not the same as the latest release
        if: ${{ steps.compare-versions.outputs.VERSION_MATCH == 'false' }}
        run: exit 1

      - name: Pull Request Version Bump
        uses: r7kamura/bump-request@v0.5.0
        with:
          release_type: 'patch'


      # - name: Stop rest of actions since package.json version is the same
      #   if: steps.compare-versions.outputs.NEW_VERSION
      #   run: exit 1
